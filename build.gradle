/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven {
            url "http://repo.maven.apache.org/maven2"      
        }
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE'
    }
}

ext {
    profile = defaultProperty('profile', 'development')
}

def defaultProperty(propertyName, defaultValue) {
    return hasProperty(propertyName) ? project[propertyName] : defaultValue
}

def loadGroovyConfig(){
    def configFile = file('config.groovy')
    new ConfigSlurper(profile).parse(configFile.toURL()).toProperties()
}

task replace(type: Sync) {
    def configHome = "${project.rootDir}/config"

    from(configHome) {
        include '**/*.properties'
        include '**/*.xml'
        filter org.apache.tools.ant.filters.ReplaceTokens, 
        tokens: loadGroovyConfig()
    }
    into "${buildDir}/resources/main"
}

allprojects {

	apply plugin: 'maven'

	group = 'com.vidoshow.vido'
	version = '1.0-SNAPSHOT'


	repositories {
		jcenter()
	    mavenLocal()
	    mavenCentral()
	    maven {
	        url "http://repo.maven.apache.org/maven2"      
	    }
	}

	apply plugin: 'io.spring.dependency-management'
	dependencyManagement {
	    imports {
	        mavenBom 'io.spring.platform:platform-bom:Athens-SR4'
	    }
	}

}


subprojects {

	apply plugin: 'java'
	apply plugin: 'eclipse'

	apply plugin: 'findbugs'
	findbugs {
	    toolVersion="3.0.1"
	    ignoreFailures=true
	    findbugsTest.enabled=false
	}
	tasks.withType(FindBugs) {
	    reports {
	        xml.enabled=false
	        html.enabled=true
	    }
	}

	apply plugin: 'pmd'
	pmd {
	    toolVersion="5.4.1"
	    ignoreFailures=true
	    pmdTest.enabled=false
	}
	tasks.withType(Pmd) {
	    reports {
	        xml.enabled=false
	        html.enabled=true
	    }
	}

	sourceCompatibility = 1.7
	targetCompatibility = 1.7

	compileJava {
	    options.fork = true
	    options.encoding = 'UTF-8'
	    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
	    options.bootClasspath = "$System.env.JAVA_HOME/jre/lib/rt.jar"
	    options.bootClasspath += "$File.pathSeparator$System.env.JAVA_HOME/jre/lib/jce.jar"
	}

	compileTestJava {
	    options.encoding = 'UTF-8'
	}


    ext {
        wtpVersion = '2.0'
        jeeVersion = '6.0'

        junitVersion = '4.12'
    }

    sourceSets {
        main {
            resources { 
                srcDir "config/application/spring/${profile}"
                srcDir "config/application/properties/${profile}"
            }
        } 
    }

    dependencies {
        testCompile(
            "junit:junit:${junitVersion}"
        )
    }
}

configure(subprojects.findAll {it.name.contains('war')}) {
    apply plugin: 'war'
}